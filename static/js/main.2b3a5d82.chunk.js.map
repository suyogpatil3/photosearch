{"version":3,"sources":["components/StyledButton.js","components/Header.js","images/eImg.svg","components/ErrorComponent.js","components/Loading.js","components/Images.js","components/ImageModal.js","App.js","index.js"],"names":["Button","styled","button","Header","setInputQuery","setPage","inputQuery","array","JSON","parse","localStorage","getItem","useState","storedInputs","setStoredInputs","filteredArray","setFilteredArray","searchSuggestions","setSearchSuggestions","className","type","onKeyUp","e","input","target","value","filter","inp","toLowerCase","includes","key","push","setItem","stringify","length","map","i","onClick","style","color","removeItem","ErrorComponent","message","src","errorImg","Loading","height","width","timeout","Images","imagesArray","setOpenModal","setModalSrc","loading","page","pageNo","useRef","lastImageOnPage","useCallback","image","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","setModal","link","alt","cursor","ref","ImageModal","class","App","setImagesArray","modalSrc","openModal","error","setError","setLoading","fetchDataFromUrl","url","a","picArray","fetch","then","res","json","data","photos","photo","farm","server","id","secret","prevState","catch","defaultUrl","useEffect","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAsBiBA,E,MApBFC,EAAOC,OAAV,gb,OCCCC,EAAS,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,cAAyBC,GAAa,EAAxBC,WAAwB,EAAbD,SACzCE,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,iBAAiB,GAC7D,EAAuCC,mBAASL,GAAhD,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAAuCF,mBAAS,IAAhD,mBAAMG,EAAN,KAAoBC,EAApB,KACA,EAAgDJ,oBAAS,GAAzD,mBAAMK,EAAN,KAAwBC,EAAxB,KA8BA,OACI,sBAAKC,UAAU,SAAf,UACI,8BACI,oBAAIA,UAAU,QAAd,6BAEJ,8BACI,oBAAIA,UAAU,QAAd,+DAIJ,sBAAKA,UAAU,kBAAf,UACI,uBAAOC,KAAK,SAASD,UAAU,SAASE,QA5BpC,SAACC,GAEb,IAAIC,EAASD,EAAEE,OAAOC,MAClBlB,EAAQM,EAAaa,QAAO,SAACC,GAAD,OAAUA,EAAIC,cAAcC,SAASN,EAAMK,kBAC3EZ,EAAiBT,GACjBW,GAAqB,GAER,UAAVI,EAAEQ,KAA0B,KAARP,IACnBnB,EAAcmB,GACVV,EAAagB,SAASN,KACtBV,EAAakB,KAAKR,GAClBb,aAAasB,QAAQ,cAAcxB,KAAKyB,UAAUpB,KAEtDR,EAAQ,OAgBJ,qBAAKc,UAAYF,EAAoB,eAAiB,cAAtD,SAESF,EAAcmB,OAAO,EAAK,qCAAGnB,EAAcoB,KAAI,SAACV,EAAMW,GAAP,OAC5C,oBAAYC,QAAS,kBAnCzCjC,EAmC6DqB,QAlC7DP,GAAqB,IAkCgDC,UAAU,oBAAoBmB,MAAO,CAACC,MAAM,SAA7F,SAAwGd,GAA/FW,MACV,cAAE,EAAF,CAASC,QA5CP,WAClB3B,aAAaC,QAAQ,iBACpBD,aAAa8B,WAAW,eACxB1B,EAAgB,IAChBI,GAAqB,KAwCN,sBAEF,cCvDV,MAA0B,iCCG5BuB,EAAiB,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAC5B,OACI,sBAAKvB,UAAU,WAAf,UACI,qBAAKwB,IAAKC,IACV,6BAAKF,Q,iBCLJG,EAAU,WACnB,OACI,sBAAK1B,UAAU,UAAf,UACI,8BAAK,cAAC,IAAD,CACGC,KAAK,OACLmB,MAAM,YACNO,OAAQ,IACRC,MAAO,IACPC,QAAS,QAGjB,8BACI,iDCVHC,EAAS,SAAC,GAA4E,IAA3EC,EAA0E,EAA1EA,YAAY5C,EAA8D,EAA9DA,WAAW6C,EAAmD,EAAnDA,aAAaC,EAAsC,EAAtCA,YAAYC,EAA0B,EAA1BA,QAAQC,EAAkB,EAAlBA,KAAKjD,EAAa,EAAbA,QAC3EkD,EAASC,mBACTC,EAAkBC,uBAAY,SAACC,GAC9BN,IACAE,EAAOK,SACNL,EAAOK,QAAQC,aAGnBN,EAAOK,QAAU,IAAIE,sBAAqB,SAAAC,GACnCA,EAAQ,GAAGC,gBAAkBV,EAAK,IACjCjD,GAAQ,SAAA4D,GAAQ,OAAIA,EAAS,QAGlCN,GACCJ,EAAOK,QAAQM,QAAQP,MAE7B,CAACN,EAAQC,IAELa,EAAU,SAACC,GACbjB,GAAa,GACbC,EAAYgB,IAEhB,OACI,sBAAKjD,UAAU,iBAAf,UAES+B,IAAc,GAAO,kDACvBA,EAAYf,KAAI,SAACiC,EAAKhC,GACpB,OAAGc,EAAYhB,SAAWE,EAAE,EAEtB,qBAAKO,IAAKyB,EACbC,IAAI,cACJhC,QAAS,kBAAM8B,EAASC,IACxB9B,MAAO,CAACgC,OAAO,WACfC,IAAOd,IAGD,qBAAKd,IAAKyB,EAChBC,IAAI,cACJhC,QAAS,kBAAM8B,EAASC,IACxB9B,MAAO,CAACgC,OAAO,gBAGtB,qBAAKnD,UAAU,aAAf,SACkB,KAAbb,GAAmBgD,EAAK,IAAMJ,EAAYhB,OAAO,EAAK,yCAAmB,cAAC,EAAD,CAAgBQ,QAAQ,kCC5CtG8B,G,MAAa,SAAC,GAAyB,IAAxBJ,EAAuB,EAAvBA,KAAKjB,EAAkB,EAAlBA,aAC7B,OACI,qBAAKhC,UAAU,YAAf,SACA,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAakB,QAAS,WAAOc,GAAa,IAAzD,SAAkE,mBAAGsB,MAAM,0BAC3E,qBAAKtD,UAAU,eAAf,SACI,qBAAKA,UAAU,QAAQkD,IAAI,cAAa1B,IAAKyB,aCqF9CM,MArFf,WACE,MAAsC9D,mBAAS,IAA/C,mBAAOsC,EAAP,KAAoByB,EAApB,KACA,EAA+B/D,mBAAS,IAAxC,mBAAOgE,EAAP,KAAgBxB,EAAhB,KACA,EAAiCxC,oBAAS,GAA1C,mBAAOiE,EAAP,KAAiB1B,EAAjB,KACA,EAAmCvC,mBAAS,IAA5C,mBAAON,EAAP,KAAkBF,EAAlB,KACA,EAAsBQ,mBAAS,GAA/B,mBAAM0C,EAAN,KAAWjD,EAAX,KACA,EAAwBO,oBAAS,GAAjC,mBAAMkE,EAAN,KAAYC,EAAZ,KACA,EAA4BnE,oBAAS,GAArC,mBAAMyC,EAAN,KAAc2B,EAAd,KAPa,SAUEC,EAVF,8EAUb,WAAgCC,GAAhC,eAAAC,EAAA,6DACOC,EAAS,GACbJ,GAAW,GAFd,SAGSK,MAAMH,GACZI,MAAK,SAACC,GAAS,OAAOA,EAAIC,UAC1BF,MAAK,SAACG,GACHL,EAAWK,EAAKC,OAAOC,MAAMxD,KAAI,SAACwB,GAC/B,MAAM,eAAN,OAAsBA,EAAMiC,KAA5B,6BAAqDjC,EAAMkC,OAA3D,YAAqElC,EAAMmC,GAA3E,YAAiFnC,EAAMoC,OAAvF,WAEHpB,GAAe,SAAAqB,GACb,MAAM,GAAN,mBAAWA,GAAX,YAAwBZ,OAE1BJ,GAAW,MAEdiB,OAAM,SAAAnB,GACLC,GAAS,GACTC,GAAW,MAhBf,4CAVa,sBAmCb,IAAMkB,EAAU,0HAAsH5C,EAAtH,2CAmBhB,OAlBA6C,qBAAU,WACQ,KAAb7F,GACH2E,EAAiBiB,KACjB,CAAC5F,EAAWgD,IAGd6C,qBAAU,WACQ,KAAb7F,GAEH2E,EADO,0HAAsH3B,EAAtH,iBAAmIhD,EAAnI,oCAGN,CAACA,EAAWgD,IAGf6C,qBAAU,WACRxB,EAAe,MACd,CAACrE,IAGF,cAAC,IAAM8F,SAAP,UACE,gCACE,8BACE,cAAC,EAAD,CAAQhG,cAAeA,EACnBE,WAAYA,EACZD,QAASA,MAEf,sBAAKc,UAAU,OAAf,UACGkC,EAAW,cAAC,EAAD,IAAa,GACvByB,EAQQ,cAAC,EAAD,CAAgBpC,QAAQ,uDARxB,cAAC,EAAD,CACEQ,YAAaA,EACbC,aAAcA,EACdC,YAAaA,EACbC,QAASA,EACTC,KAAMA,EACNjD,QAASA,EACXC,WAAYA,IAGvBuE,EAAY,cAAC,EAAD,CACGT,KAAMQ,EACNzB,aAAcA,IAEhB,YCnFtBkD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2b3a5d82.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport React from 'react';\r\nconst Button = styled.button` display: inline;\r\nfont-size:medium;\r\nbackground: #ff5d33f1;\r\ntransition: all 0.2s ease-in-out;\r\ncolor: white;\r\nborder: 0;\r\nheight:30px;\r\nborder-radius: 5px;\r\nmargin-left: 5px;\r\nmargin-right:4px;\r\nmargin-bottom:5px;\r\n &:hover {\r\n    box-shadow: -4px -4px 7px white, 4px 4px 7px gray;\r\n    background:#ec451bf1;\r\n  }\r\n  \r\n  &:active {\r\n    box-shadow: inset 1px 1px 2px white, inset -1px -1px 2px gray;\r\n  }`\r\n\r\n  export default Button;\r\n","import React ,{useState} from 'react';\r\nimport Button from './StyledButton';\r\n\r\nexport const Header = ({setInputQuery,inputQuery,setPage}) => { \r\n    var array = JSON.parse(localStorage.getItem('storedInput'))||[];\r\n    const [storedInputs,setStoredInputs] = useState(array); //getting previous suggestions if stored in localStorage\r\n    const[filteredArray,setFilteredArray]= useState([]);\r\n    const[searchSuggestions,setSearchSuggestions] = useState(true)\r\n//to clear previous searches\r\n    const clearSearchItems = () => {\r\n        if(localStorage.getItem('storedInput')){\r\n            localStorage.removeItem('storedInput')\r\n            setStoredInputs([]);\r\n            setSearchSuggestions(false);\r\n        }\r\n    }\r\n    const setSuggestions = (val) => {\r\n        setInputQuery(val);\r\n        setSearchSuggestions(false);\r\n    }\r\n    const onInput = (e) => {\r\n        //for search suggestions\r\n        let input  = e.target.value;\r\n        let array = storedInputs.filter((inp) => (inp.toLowerCase().includes(input.toLowerCase())))\r\n        setFilteredArray(array);\r\n        setSearchSuggestions(true);\r\n        //for getting input only on enter key\r\n        if(e.key === 'Enter'&& input!==\"\"){\r\n            setInputQuery(input);\r\n            if(!storedInputs.includes(input)) {\r\n                storedInputs.push(input);\r\n                localStorage.setItem('storedInput',JSON.stringify(storedInputs))\r\n            }\r\n            setPage(1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div>\r\n                <h1 className=\"title\">Search Images</h1>\r\n            </div>\r\n            <div>\r\n                <h6 className=\"title\">\r\n                    Input and press enter to search awesome images!\r\n                </h6>\r\n            </div>\r\n            <div className=\"searchContainer\">\r\n                <input type=\"search\" className=\"search\" onKeyUp={onInput} />\r\n                <div className= {searchSuggestions ? \"searchString\" : \"displayNone\"}>\r\n                    {\r\n                        (filteredArray.length>0) ? <>{filteredArray.map((value,i) => (\r\n                            <li key={i} onClick={()=> setSuggestions(value)} className=\"searchSuggestions\" style={{color:'black'}}>{value}</li>\r\n                        ))}< Button onClick={clearSearchItems}>Clear</Button>\r\n                        </>\r\n                        :null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/eImg.13468768.svg\";","import React from 'react'\r\nimport errorImg from '../images/eImg.svg'\r\n\r\nexport const ErrorComponent = ({message}) => {\r\n    return (\r\n        <div className=\"errorImg\">\r\n            <img src={errorImg}/>\r\n            <h5>{message}</h5>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <div><Loader\r\n                    type=\"Puff\"\r\n                    color=\"#ff5d33f1\"\r\n                    height={200}\r\n                    width={200}\r\n                    timeout={5000} //3 secs\r\n                />\r\n            </div>\r\n            <div>\r\n                <h3>Loading..</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useCallback,useRef} from 'react'\r\nimport { ErrorComponent } from './ErrorComponent';\r\nimport { Loading } from './Loading';\r\n\r\nexport const Images = ({imagesArray,inputQuery,setOpenModal,setModalSrc,loading,page,setPage}) => {\r\n    const pageNo = useRef();\r\n    const lastImageOnPage = useCallback((image) => {\r\n        if(loading) return //return because we dont want ot check window if images are still loading\r\n        if(pageNo.current){ //doing this to disconnect from current page and add to next page\r\n            pageNo.current.disconnect()\r\n        }\r\n        //setting new reference to end of new page\r\n        pageNo.current = new IntersectionObserver(entries => { //function watches all the entries that it is watching currently\r\n            if(entries[0].isIntersecting && page<10){ //This checks if the image is currently there on the page\r\n                setPage(prevPage => prevPage+1)\r\n            }\r\n        }) \r\n        if(image){\r\n            pageNo.current.observe(image); // to keep a track of the last image\r\n        }\r\n    },[loading,page]);\r\n\r\n    const setModal= (link) => {\r\n        setOpenModal(true);\r\n        setModalSrc(link);\r\n    }\r\n    return (\r\n        <div className=\"imageContainer\">\r\n           {\r\n               ((imagesArray===[])) ? <h3>No results found</h3> \r\n             : imagesArray.map((link,i) => { \r\n                 if(imagesArray.length === i+1){\r\n                    <div>{loading && 'Loading...'}</div>\r\n                 return<img src={link} \r\n                    alt=\"image-error\" \r\n                    onClick={() => setModal(link)} \r\n                    style={{cursor:\"pointer\"}}\r\n                    ref = {lastImageOnPage}\r\n                    />\r\n                 }\r\n                    return<img src={link} \r\n                    alt=\"image-error\" \r\n                    onClick={() => setModal(link)} \r\n                    style={{cursor:\"pointer\"}}/>\r\n                })\r\n             }\r\n             <div className=\"moreImages\">\r\n                {(inputQuery!==\"\" && page<10 && imagesArray.length>1) ? <h3>Loading</h3> : <ErrorComponent message=\"You've reached the end!\"/>}\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const ImageModal = ({link,setOpenModal}) => {\r\n    return (\r\n        <div className=\"modalBack\">\r\n        <div className=\"modalContainer\">\r\n            <div className=\"modalClose\" onClick={() => {setOpenModal(false)}}><i class=\"fas fa-times-circle\"></i></div>\r\n            <div className=\"modalContent\">\r\n                <img className=\"image\" alt=\"image-error\"src={link}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n   \r\n    )\r\n}\r\n","import './App.css';\nimport React, {useState,useEffect} from 'react';\nimport { Header } from './components/Header';\nimport { Images } from './components/Images';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ImageModal } from './components/ImageModal';\nimport { ErrorComponent } from './components/ErrorComponent';\nimport { Loading } from './components/Loading';\n\nfunction App() {\n  const [imagesArray, setImagesArray] = useState([]);\n  const [modalSrc,setModalSrc] = useState('');    //to get modal source from images component\n  const [openModal,setOpenModal] = useState(false);  //to open/close modal\n  const [inputQuery,setInputQuery] = useState(\"\");  //getting input from Header\n  const[page,setPage] = useState(1);                //for changing page number while infinite loading\n  const[error,setError] = useState(false);\n  const[loading,setLoading] = useState(false);\n\n//function for fetching data from flickr API\n  async function fetchDataFromUrl(url){\n     var picArray=[];\n     setLoading(true);\n     await fetch(url)\n    .then((res) => {return res.json()})\n    .then((data) => {\n        picArray = data.photos.photo.map((image) => {\n           return `https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`\n        })\n        setImagesArray(prevState => {\n          return([...prevState,...picArray])\n        } );\n        setLoading(false);\n    })\n    .catch(error => {\n      setError(true);\n      setLoading(false);\n    })\n  }\n\n//for getting default photos\n//*Please note* - I have changed the default url given by company to a url returning default dog images because the provided default url \n  //use to return a few adult images. I went through the documentation for the getRecent method - https://www.flickr.com/services/api/flickr.photos.getRecent.html\n  //but it didn't have a safe search option for getRecent method unlike other methods.I have also commented the same API below which can be used for the getRecent method.\n  // const defaultUrl = `https://www.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=c603ee6ad346f3682d963bc43161ad94&page=${page}&format=json&nojsoncallback=1`\n  const defaultUrl = `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=c603ee6ad346f3682d963bc43161ad94&page=${page}&tags=dogs&format=json&nojsoncallback=1`\n  useEffect(() => {\n    if(inputQuery===\"\")\n    fetchDataFromUrl(defaultUrl);\n  },[inputQuery,page])\n\n// for searching photos for given input query\n  useEffect(() => {\n    if(inputQuery!==\"\"){\n    let url = `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=c603ee6ad346f3682d963bc43161ad94&page=${page}&tags=${inputQuery}&format=json&nojsoncallback=1`\n    fetchDataFromUrl(url);\n    }\n  }, [inputQuery,page])\n\n  //for resetting images array everytime input query changes\n  useEffect(() => {\n    setImagesArray([]);\n  }, [inputQuery])\n\n  return (\n    <React.Fragment>\n      <div>\n        <div>\n          <Header setInputQuery={setInputQuery} \n              inputQuery={inputQuery}\n              setPage={setPage}/>\n        </div>\n        <div className=\"body\">\n          {loading ?  <Loading/> : \"\"}\n          {!error ? <Images \n                      imagesArray={imagesArray} \n                      setOpenModal={setOpenModal} \n                      setModalSrc={setModalSrc} //for getting image source for modal\n                      loading={loading}\n                      page={page}                //page for infinite loading\n                      setPage={setPage}\n                    inputQuery={inputQuery}/> \n                  : <ErrorComponent message=\"Oops! Some error occured while loading the images!\"/>}\n        \n        {openModal ? <ImageModal \n                        link={modalSrc} \n                        setOpenModal={setOpenModal}\n                      /> \n                    : \"\"}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}